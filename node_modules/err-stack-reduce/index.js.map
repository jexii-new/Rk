{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;;AAAA,gDAAwE;AAcxE;;;;;;;GAOG;AACH,SAAgB,kBAAkB,CAAC,SAAgB,EAAE,WAAsB;IAE1E,MAAM,KAAK,GAAG,IAAA,oBAAY,EAAC,SAAS,CAAC,CAAC,KAAK,CAAC;IAC5C,MAAM,EAAE,KAAK,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,WAAW,aAAX,WAAW,cAAX,WAAW,GAAI,EAAE,CAAC;IAEjD,OAAO,CAAC,KAAY,EAAE,OAAkB,EAAE,EAAE;;QAE3C,IAAI,KAAK,GAAG,IAAA,oBAAY,EAAC,KAAK,CAAC,CAAC;QAChC,IAAI,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAErC,IAAI,MAAM,GAAG,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,mCAAI,KAAK,CAAC;QACrC,IAAI,IAAI,GAAG,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,GAAG,mCAAI,GAAG,CAAC;QAE/B,IAAI,CAAC,GAAW,MAAM,CAAC;QAEvB,GACA;YACC,IAAI,CAAA,MAAA,MAAM,CAAC,CAAC,CAAC,0CAAE,MAAM,KAAI,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EACzD;gBACC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;gBAC3B,MAAM;aACN;SACD,QACM,CAAC,EAAE,GAAG,IAAI,IAAI,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE;QAEzC,OAAO;YACN,GAAG,KAAK;YACR,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;YACxB,aAAa,EAAE,KAAK,CAAC,KAAK;SAC1B,CAAA;IACF,CAAC,CAAA;AACF,CAAC;AA/BD,gDA+BC;AAED;;;;GAIG;AACH,SAAgB,cAAc,CAAC,KAAY,EAAE,SAAgB,EAAE,WAAsB;IAEpF,OAAO,kBAAkB,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC,KAAK,CAAC,CAAA;AACzD,CAAC;AAHD,wCAGC;AAED,kBAAe,kBAAkB,CAAA","sourcesContent":["import { errStackMeta, stringifyStackMeta } from 'err-stack-meta/index';\n\nexport interface IOptions\n{\n\t/**\n\t * @default 1\n\t */\n\tstart?: number;\n\t/**\n\t * @default 5\n\t */\n\tend?: number;\n}\n\n/**\n * reduce stame stack from sub error with parent error\n *\n * @example\n * const stackReduce = errStackReduceCore(mainError, options.stackReduceOptions);\n *\n * console.dir(stackReduce(error));\n */\nexport function errStackReduceCore(mainError: Error, mainOptions?: IOptions)\n{\n\tconst stack = errStackMeta(mainError).stack;\n\tconst { start = 1, end = 5 } = mainOptions ?? {};\n\n\treturn (error: Error, options?: IOptions) =>\n\t{\n\t\tlet _meta = errStackMeta(error);\n\t\tlet _stack = _meta.stack.split('\\n');\n\n\t\tlet _start = options?.start ?? start;\n\t\tlet _end = options?.end ?? end;\n\n\t\tlet i: number = _start;\n\n\t\tdo\n\t\t{\n\t\t\tif (_stack[i]?.length && stack.includes(_stack[i].trim()))\n\t\t\t{\n\t\t\t\t_stack = _stack.slice(0, i)\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\twhile (i++ < _end || i >= _stack.length);\n\n\t\treturn {\n\t\t\t..._meta,\n\t\t\tstack: _stack.join('\\n'),\n\t\t\toriginalStack: _meta.stack,\n\t\t}\n\t}\n}\n\n/**\n * reduce stame stack from sub error with parent error\n *\n * recommend use {@link errStackReduceCore}\n */\nexport function errStackReduce(error: Error, mainError: Error, mainOptions?: IOptions)\n{\n\treturn errStackReduceCore(mainError, mainOptions)(error)\n}\n\nexport default errStackReduceCore\n"]}