{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["import indentString, { Options as IIndentOptions } from 'indent-string';\nimport _cleanStack from 'clean-stack';\nimport { inspect } from 'util';\nimport { isIterable } from 'check-iterable';\nimport { array_unique_overwrite } from 'array-hyper-unique';\nimport { getSubErrors } from 'err-errors/index';\nimport { errStackReduceCore, IOptions as IErrStackReduceOptions } from 'err-stack-reduce/index';\nimport { stringifyStackMeta } from 'err-stack-meta/index';\n\nexport interface IOptions<T = any>\n{\n\terror?: Error;\n\n\thandleStack?(stack: string, error: T): string;\n\n\t/**\n\t * @default 4\n\t */\n\tindent?: number,\n\n\t/**\n\t * options for `indent-string`\n\t */\n\tindentOptions?: IIndentOptions,\n\n\tstackReduceOptions?: IErrStackReduceOptions,\n}\n\nexport type IIterableLike<T = any> = Iterable<T> | IterableIterator<T>;\nexport type IIterableAllowed<T, A extends IIterableLike<T>> = Exclude<A, string | String>;\n\nexport function _isAllowedIterable(arr: any)\n{\n\treturn (typeof arr !== 'string' && !(arr instanceof String) && isIterable(arr))\n}\n\nexport function errorsToMessageList<T, A extends IIterableLike<T> = IIterableLike<T>>(errors: IIterableAllowed<T, A>,\n\toptions?: IOptions<T>,\n\tmainError?: Error,\n)\n{\n\tif (!errors || !_isAllowedIterable(errors))\n\t{\n\t\tthrow new TypeError(`Invalid input errors: ${errors}`)\n\t}\n\n\toptions ??= {};\n\n\tconst { handleStack = (stack: string) => _cleanStack(stack) } = options;\n\n\tmainError ??= options.error;\n\n\tlet _main: string;\n\n\tlet ls: string[] = [];\n\n\tconst stackReduce = errStackReduceCore(mainError, options.stackReduceOptions);\n\n\t(errors as any as (T & Error)[])\n\t\t.forEach((error) =>\n\t\t{\n\t\t\tif (error === void 0 || error === null)\n\t\t\t{\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tif (mainError === error)\n\t\t\t{\n\t\t\t\t_main = String(error)\n\t\t\t}\n\t\t\telse if (typeof error.stack === 'string')\n\t\t\t{\n\t\t\t\tls.push(handleStack(stringifyStackMeta(stackReduce(error)), error))\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tls.push(inspect(error))\n\t\t\t}\n\n\t\t})\n\t;\n\n\tls = ls.filter(s => s?.length)\n\n\tif (_main?.length)\n\t{\n\t\tls.unshift(_main)\n\t}\n\n\treturn array_unique_overwrite(ls)\n}\n\nexport function indentSubErrorMessage(sub_message: string | IIterableLike<string>, options?: IOptions)\n{\n\tif (_isAllowedIterable(sub_message))\n\t{\n\t\tsub_message = [...sub_message].join('\\n');\n\t}\n\n\toptions ??= {};\n\n\treturn indentString(sub_message as string, options.indent ?? 4, options.indentOptions)\n}\n\nexport function indentSubErrors<T, A extends IIterableLike<T> = IIterableLike<T>>(errors: IIterableAllowed<T, A>,\n\toptions?: IOptions<T>,\n\tmainError?: Error,\n)\n{\n\tconst sub_message = errorsToMessageList(errors, options, mainError);\n\treturn indentSubErrorMessage(sub_message, options);\n}\n\nexport function indentSubErrorsFromError<T, A extends IIterableLike<T> = IIterableLike<T>>(mainError?: Error,\n\toptions?: IOptions<T>,\n)\n{\n\tlet errors = getSubErrors(mainError) as IIterableAllowed<T, A>;\n\n\treturn indentSubErrors(errors, options, mainError)\n}\n\nexport function messageWithSubErrors<T, A extends IIterableLike<T> = IIterableLike<T>>(mainError: Error,\n\terrors?: IIterableAllowed<T, A>,\n\toptions?: IOptions<T>,\n)\n{\n\terrors ??= getSubErrors(mainError) as IIterableAllowed<T, A>;\n\n\treturn String(mainError.message) + '\\n' + indentSubErrors(errors, options, mainError);\n}\n\nexport default messageWithSubErrors\n"]}