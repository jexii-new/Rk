{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;;AAAA,uCAAmC;AAEnC,+DAA2D;AAkB3D,SAAgB,WAAW,CAExB,MAAS,EAAE,OAAkB,EAAE,GAAI;;IAErC,OAAO,YAAY,CAAC,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,OAAO,EAAE,OAAO,EAAE,MAAA,GAAG,aAAH,GAAG,cAAH,GAAG,GAAI,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,QAAQ,mCAAI,MAAM,CAAC,CAAA;AAClF,CAAC;AALD,kCAKC;AAED,SAAgB,YAAY,CAAC,GAAG,EAAE,OAAkB,EAAE,GAAI;;IAEzD,IACA;QACC,OAAO,IAAI,kBAAO,CAAC,MAAA,MAAA,GAAG,CAAC,GAAG,mCAAI,MAAA,GAAG,CAAC,GAAG,0CAAE,WAAW,mCAAI,aAAa,CAAC,GAAG,EAAE,GAAG,aAAH,GAAG,cAAH,GAAG,GAAI,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,QAAQ,CAAC,CAAC,CAAA;KACnG;IACD,OAAO,CAAC,EACR;QACC,IAAI,CAAC,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,WAAW,CAAA,EACzB;YACC,MAAM,CAAC,CAAA;SACP;KACD;AACF,CAAC;AAbD,oCAaC;AAED,SAAgB,aAAa,CAAC,GAAG,EAAE,GAAG;;IAErC,IAAI,IAAI,GAAiB,GAAG,CAAC,WAAW,CAAC;IACzC,IAAI,eAAe,GAAkB,MAAA,MAAA,GAAG,CAAC,eAAe,mCAAI,GAAG,mCAAI,EAAE,CAAC;IACtE,IAAI,QAAQ,GAAa,MAAA,GAAG,CAAC,QAAQ,mCAAI,EAAE,CAAC;IAC5C,GAAG,aAAH,GAAG,cAAH,GAAG,IAAH,GAAG,GAAK,EAAE,EAAC;IAEX,IAAI,MAAA,QAAQ,CAAC,QAAQ,0CAAE,MAAM,EAC7B;QACC,IAAI,CAAU,CAAC;QAEf,IAAI,QAAQ,CAAC,QAAQ,IAAI,QAAQ,CAAC,QAAQ,EAC1C;YACC,CAAC,GAAG,IAAI,kBAAO,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC;SAC9D;aAED;YACC,CAAC,GAAG,IAAI,kBAAO,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;SACtC;QAED,CAAC,CAAC,GAAG,CAAC,UAAU,EAAE,MAAA,QAAQ,CAAC,QAAQ,mCAAI,eAAe,CAAC,QAAQ,CAAC,CAAC;QACjE,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC7B,CAAC,CAAC,GAAG,CAAC,UAAU,EAAE,MAAA,QAAQ,CAAC,QAAQ,mCAAI,eAAe,CAAC,IAAI,CAAC,CAAC;QAC7D,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;QAChC,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC7B,CAAC,CAAC,GAAG,CAAC,UAAU,EAAE,MAAA,MAAA,QAAQ,CAAC,QAAQ,mCAAI,MAAA,eAAe,CAAC,SAAS,+CAAzB,eAAe,EAAa,MAAM,CAAW,mCAAI,eAAe,CAAC,IAAI,CAAC,CAAC;QAE9G,IAAI,GAAG,CAAC,CAAC;KACT;SACI,IAAI,OAAO,eAAe,CAAC,SAAS,KAAK,UAAU,EACxD;QACC,IAAI,CAAC,GAAG,IAAI,kBAAO,CAAC,MAAA,GAAG,CAAC,QAAQ,GAAG,IAAI,GAAG,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,mCAAI,eAAe,CAAC,IAAI,CAAC,CAAC;QAErG,CAAC,CAAC,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC;QACtB,CAAC,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;QAE1B,IAAI,GAAG,CAAC,CAAC;KACT;SACI,IAAI,CAAC,IAAI,KAAI,MAAA,GAAG,CAAC,MAAM,0CAAE,GAAG,CAAA,EACjC;QACC,IAAI,GAAG,IAAI,kBAAO,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAEvD,IAAI,OAAO,GAAG,CAAC,MAAM,CAAC,MAAM,KAAK,WAAW,EAC5C;YACC,IAAI,EAAE,GAAG,IAAI,0CAAmB,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACpD,EAAE,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE;gBACxB,IAAgB,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;YAChD,CAAC,CAAC,CAAA;SACF;KACD;IAED,OAAO,IAAI,kBAAO,CAAC,IAAI,CAAC,CAAA;AACzB,CAAC;AApDD,sCAoDC;AAED,kBAAe,YAAY,CAAA","sourcesContent":["import { LazyURL } from 'lazy-url';\nimport type { ClientRequest } from 'http';\nimport { LazyURLSearchParams } from 'http-form-urlencoded';\n\nexport interface IReqInfo\n{\n\tprotocol?: string\n\tauth?: string\n\thostname?: string\n\tport?: string\n\tpathname?: string\n\tsearch?: string\n}\n\nexport interface IOptions\n{\n\tignoreError?: boolean\n\tresponse?\n}\n\nexport function resultToURL<T extends {\n\trequest?: any;\n}>(result: T, options?: IOptions, res?)\n{\n\treturn requestToURL(result?.request, options, res ?? options?.response ?? result)\n}\n\nexport function requestToURL(req, options?: IOptions, res?)\n{\n\ttry\n\t{\n\t\treturn new LazyURL(req.url ?? req.res?.responseUrl ?? _requestToURL(req, res ?? options?.response))\n\t}\n\tcatch (e)\n\t{\n\t\tif (!options?.ignoreError)\n\t\t{\n\t\t\tthrow e\n\t\t}\n\t}\n}\n\nexport function _requestToURL(req, res)\n{\n\tlet href: string | URL = req._currentUrl;\n\tlet _currentRequest: ClientRequest = req._currentRequest ?? req ?? {};\n\tlet _options: IReqInfo = req._options ?? {};\n\tres ??= {};\n\n\tif (_options.protocol?.length)\n\t{\n\t\tlet u: LazyURL;\n\n\t\tif (_options.protocol && _options.hostname)\n\t\t{\n\t\t\tu = new LazyURL(_options.protocol + '//' + _options.hostname);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tu = new LazyURL(_currentRequest.path);\n\t\t}\n\n\t\tu.set('protocol', _options.protocol ?? _currentRequest.protocol);\n\t\tu.set('port', _options.port);\n\t\tu.set('pathname', _options.pathname ?? _currentRequest.path);\n\t\tu.set('query', _options.search);\n\t\tu.set('auth', _options.auth);\n\t\tu.set('hostname', _options.hostname ?? _currentRequest.getHeader?.('Host') as string ?? _currentRequest.host);\n\n\t\thref = u;\n\t}\n\telse if (typeof _currentRequest.getHeader === 'function')\n\t{\n\t\tlet u = new LazyURL(req.protocol + '//' + _currentRequest.getHeader('Host') ?? _currentRequest.host);\n\n\t\tu.pathname = req.path;\n\t\tu.protocol = req.protocol;\n\n\t\thref = u;\n\t}\n\telse if (!href && res.config?.url)\n\t{\n\t\thref = new LazyURL(res.config.url, res.config.baseURL);\n\n\t\tif (typeof res.config.params !== 'undefined')\n\t\t{\n\t\t\tlet sp = new LazyURLSearchParams(res.config.params);\n\t\t\tsp.forEach((value, key) => {\n\t\t\t\t(href as LazyURL).searchParams.set(key, value);\n\t\t\t})\n\t\t}\n\t}\n\n\treturn new LazyURL(href)\n}\n\nexport default requestToURL\n"]}