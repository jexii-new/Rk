{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;;AAUA,SAAgB,YAAY,CAAkB,KAAQ;IAErD,IAAI,MAAc,CAAC;IACnB,IAAI,OAAO,GAAW,KAAK,CAAC,OAAO,CAAC;IACpC,IAAI,KAAa,CAAC;IAElB,IAAI,KAAa,CAAC;IAClB,IAAI,CAAS,CAAC;IAEd,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAC7B;QACC,IAAI,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;QAEhC,KAAK,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC;QACnB,KAAK,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEtB,CAAC,GAAG,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAErC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KACjC;SAED;QACC,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QAE1C,IAAI,CAAC,KAAK,CAAC,CAAC,EACZ;YACC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACjC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;YAEnD,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAC7C;gBACC,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBAEjE,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACjC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;aACnD;SACD;aAED;YACC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAA;SACnB;KACD;IAED,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAA;IAErC,OAAO;QACN,MAAM;QACN,OAAO;QACP,KAAK;QACL,KAAK;KACL,CAAA;AACF,CAAC;AAnDD,oCAmDC;AAED,SAAgB,kBAAkB,CAAC,IAA4D,EAAE,KAAc;IAE9G,KAAK,aAAL,KAAK,cAAL,KAAK,IAAL,KAAK,GAAK,IAAI,CAAC,KAAK,EAAC;IAErB,IAAI,KAAK,CAAC,MAAM,EAChB;QACC,KAAK,GAAG,KAAK,KAAK,EAAE,CAAC;KACrB;IAED,OAAO,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,GAAG,KAAK,EAAE,CAAA;AAC/C,CAAC;AAVD,gDAUC;AAED,kBAAe,YAAY,CAAA","sourcesContent":["import { ITSPickExtra } from 'ts-type';\n\nexport interface IErrStackMeta<E extends Error>\n{\n\tprefix: string;\n\tmessage: string;\n\tstack: string;\n\terror: E;\n}\n\nexport function errStackMeta<E extends Error>(error: E): IErrStackMeta<E>\n{\n\tlet prefix: string;\n\tlet message: string = error.message;\n\tlet stack: string;\n\n\tlet front: string;\n\tlet i: number;\n\n\tif (!/\\n/.test(error.message))\n\t{\n\t\tlet ls = error.stack.split('\\n')\n\n\t\tfront = ls.shift();\n\t\tstack = ls.join('\\n');\n\n\t\ti = front.lastIndexOf(error.message);\n\n\t\tprefix = error.stack.slice(0, i);\n\t}\n\telse\n\t{\n\t\ti = error.stack.indexOf(error.message, 1);\n\n\t\tif (i !== -1)\n\t\t{\n\t\t\tprefix = error.stack.slice(0, i);\n\t\t\tstack = error.stack.slice(i + error.message.length)\n\n\t\t\tif (stack.trim().indexOf(error.message) === 0)\n\t\t\t{\n\t\t\t\ti = error.stack.indexOf(error.message, i + error.message.length);\n\n\t\t\t\tprefix = error.stack.slice(0, i);\n\t\t\t\tstack = error.stack.slice(i + error.message.length)\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstack = error.stack\n\t\t}\n\t}\n\n\tstack = stack.replace(/^[\\r\\n]+/, '')\n\n\treturn {\n\t\tprefix,\n\t\tmessage,\n\t\tstack,\n\t\terror,\n\t}\n}\n\nexport function stringifyStackMeta(meta: ITSPickExtra<IErrStackMeta<any>, 'prefix' | 'message'>, stack?: string)\n{\n\tstack ??= meta.stack;\n\n\tif (stack.length)\n\t{\n\t\tstack = `\\n${stack}`;\n\t}\n\n\treturn `${meta.prefix}${meta.message}${stack}`\n}\n\nexport default errStackMeta\n"]}